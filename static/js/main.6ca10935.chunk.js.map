{"version":3,"sources":["components/addNew/AddNew.js","components/infoListItem/InfoListItem.js","components/invoiceTable/InvoiceTable.js","components/createInvoice/CreateInvoice.js","components/App.js","index.js"],"names":["AddNew","history","useHistory","className","type","onClick","push","InfoListItem","item","moment","date_created","format","number","date_supplied","comment","_id","InvoiceTable","items","infoLS","map","CreateInvoice","getUser","validateSchema","yup","shape","min","integer","max","initialValues","validationSchema","onSubmit","values","uuidv4","onHandleSubmit","placeholder","name","value","component","as","initialState","info","App","useState","state","setState","person","prev","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","path","exact","render","users","to","ReactDOM","document","getElementById"],"mappings":"oMAiBeA,EAdA,WACb,IAAMC,EAAUC,cAGhB,OACE,0BAASC,UAAU,YAAnB,UACE,mBAAGA,UAAU,cAAb,qBACA,wBAAQA,UAAU,UAAUC,KAAK,SAASC,QAL1B,kBAAMJ,EAAQK,KAAK,YAKnC,yB,iBCOSC,EAbM,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACnB,OACI,mCACI,+BACI,6BAAKC,IAAOD,EAAKE,aAAc,cAAcC,OAAO,gBACpD,6BAAKH,EAAKI,SACV,6BAAKH,IAAOD,EAAKK,cAAe,cAAcF,OAAO,gBACrD,6BAAKH,EAAKM,YAJLN,EAAKO,QC0CXC,EA3CM,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAC7B,OACE,sBAAKf,UAAU,UAAf,UACE,yBAASA,UAAU,gBAAnB,SACE,4CAGF,yBAASA,UAAU,iBAAnB,SACE,cAAC,EAAD,MAGF,yBAASA,UAAU,eAAnB,SACE,wBAAOA,UAAU,UAAjB,UACE,yBAASA,UAAU,gBAAnB,sBACA,gCACE,+BACE,wCACA,oCACA,wCACA,8CAIJ,kCACGc,EAAME,KAAI,SAAAX,GAAI,OACb,cAAC,EAAD,CAAcA,KAAMA,GAAWA,EAAKO,QAGrCG,GAAUA,EAAOC,KAAI,SAAAX,GAAI,OACvB,+BACC,6BAAKA,EAAKE,eACV,6BAAKF,EAAKI,SACV,6BAAKJ,EAAKK,gBACV,6BAAKL,EAAKM,YAJFN,EAAKO,oB,yBCkFdK,EA9GO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjBpB,EAAUC,cAEVoB,EAAiBC,MAAaC,MAAM,CACxCZ,OAAQW,MAEPE,IAAI,EAAG,sBACPC,UACDZ,QAASS,MAAaI,IAAI,IAAK,iCAYjC,OACE,sBAAKxB,UAAU,gBAAf,UACE,kCACE,oBAAIA,UAAU,sBAAd,8BAGF,kCACE,cAAC,IAAD,CACEyB,cAAe,CACbhB,OAAQ,GACRF,aAAc,GACdG,cAAe,GACfC,QAAS,IAEXe,iBAAkBP,EAClBQ,SAAU,SAAAC,IAtBK,SAAAA,GACrBV,EAAQ,2BACHU,GADE,IAELhB,IAAKiB,iBAoBCC,CAAeF,GAzBI9B,EAAQK,KAAK,MAgBpC,SAaG,YAEM,IADLyB,EACI,EADJA,OAEA,OACE,eAAC,IAAD,CAAM5B,UAAU,OAAhB,UACE,wBAAOA,UAAU,aAAjB,UACA,sBAAMA,UAAU,iBAAhB,qBACE,cAAC,IAAD,CACE+B,YAAY,qBACZ/B,UAAU,aACVC,KAAK,SACL+B,KAAK,SACLC,MAAOL,EAAOnB,SAEhB,cAAC,IAAD,CACET,UAAU,QACVgC,KAAK,SACLE,UAAU,WAId,wBAAOlC,UAAU,aAAjB,UACA,sBAAMA,UAAU,iBAAhB,0BACE,cAAC,IAAD,CACEA,UAAU,aACVC,KAAK,OACL+B,KAAK,gBACLC,MAAOL,EAAOlB,mBAIlB,wBAAOV,UAAU,aAAjB,UACA,sBAAMA,UAAU,iBAAhB,2BACE,cAAC,IAAD,CACEA,UAAU,aACVC,KAAK,OACL+B,KAAK,eACLC,MAAOL,EAAOrB,kBAIlB,wBAAOP,UAAU,aAAjB,UACA,sBAAMA,UAAU,iBAAhB,sBACE,cAAC,IAAD,CACEA,UAAU,eACVgC,KAAK,UACLG,GAAG,WACHJ,YAAY,aACZ9B,KAAK,OACLgC,MAAOL,EAAOjB,UAEhB,cAAC,IAAD,CACEX,UAAU,QACVgC,KAAK,UACLE,UAAU,WAId,wBAAQlC,UAAU,WAAWC,KAAK,SAAlC,8BCnGVmC,EAAe,CACnBC,KAAM,IA0COC,EAvCH,WAAO,IAAD,EACUC,mBAASH,GADnB,mBACTI,EADS,KACFC,EADE,KAGVvB,EAAU,SAAAwB,GACdD,GAAS,SAAAE,GAAI,kCACRA,GADQ,IAEXN,KAAK,GAAD,mBAAMM,EAAKN,MAAX,gBAAsBK,WAe9B,OAXAE,qBAAU,WACR,IAAMP,EAAOQ,aAAaC,QAAQ,QAC9BT,GACFI,EAAS,CAAEJ,KAAMU,KAAKC,MAAMX,OAE7B,IAEHO,qBAAU,WACRC,aAAaI,QAAQ,OAAQF,KAAKG,UAAUV,EAAMH,SACjD,CAACG,EAAMH,OAGR,qCACE,cAAC,IAAD,CAAOc,KAAK,IACZC,OAAK,EACLC,OAAQ,kBAAM,cAAC,EAAD,CACdvC,MAAOwC,EACPvC,OAAQyB,EAAMH,UAEd,cAAC,IAAD,CACEc,KAAK,UACLC,OAAK,EACLC,OAAQ,kBAAM,cAAC,EAAD,CAAenC,QAASA,OAExC,cAAC,IAAD,CAAUqC,GAAG,UCrCnBC,IAASH,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAGFI,SAASC,eAAe,U","file":"static/js/main.6ca10935.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst AddNew = () => {\r\n  const history = useHistory();\r\n  const onHandleNew = () => history.push('/create');\r\n\r\n  return (\r\n    <section className=\"actionBtn\">\r\n      <p className=\"actionTitle\">Actions</p>\r\n      <button className=\"formBtn\" type=\"button\" onClick={onHandleNew}>\r\n        Add new\r\n      </button>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AddNew;\r\n","import React from 'react'\r\nimport moment from 'moment';\r\n\r\n\r\nconst InfoListItem = ({item}) => {\r\n    return (\r\n        <>\r\n            <tr key={item._id}>\r\n                <td>{moment(item.date_created, 'DD-MM-YYYY').format('YYYY-MM-DD')}</td>\r\n                <td>{item.number}</td>\r\n                <td>{moment(item.date_supplied, 'DD-MM-YYYY').format('YYYY-MM-DD')}</td>\r\n                <td>{item.comment}</td>\r\n            </tr>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default InfoListItem;","import React from 'react';\r\n\r\nimport AddNew from '../addNew/AddNew';\r\nimport InfoListItem from '../infoListItem/InfoListItem'\r\n\r\n\r\nconst InvoiceTable = ({ items, infoLS }) => {\r\n  return (\r\n    <div className=\"invoice\">\r\n      <section className=\"invoice-title\">\r\n        <h1>Invoices</h1>\r\n      </section>\r\n\r\n      <section className=\"invoice-addNew\">\r\n        <AddNew />\r\n      </section>\r\n\r\n      <section className=\"invoice-form\">\r\n        <table className=\"history\">\r\n          <caption className=\"history-title\">Invoices</caption>\r\n          <thead>\r\n            <tr>\r\n              <th>Create</th>\r\n              <th>No</th>\r\n              <th>Supply</th>\r\n              <th>Comment</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {items.map(item =>  ( \r\n              <InfoListItem item={item} key={item._id} />\r\n            ))}\r\n            \r\n            {infoLS && infoLS.map(item =>( \r\n               <tr key={item._id}>\r\n                <td>{item.date_created}</td>\r\n                <td>{item.number}</td>\r\n                <td>{item.date_supplied}</td>\r\n                <td>{item.comment}</td>\r\n            </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InvoiceTable;\r\n\r\n\r\n","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst CreateInvoice = ({ getUser }) => {\r\n  const history = useHistory();\r\n\r\n  const validateSchema = yup.object().shape({\r\n    number: yup\r\n    .number()\r\n    .min(3, 'at least 3 symbols')\r\n    .integer(),\r\n    comment: yup.string().max(160, 'no more than 160 characters'),\r\n  });\r\n\r\n  const onHandleGoBack = () => history.push('/');\r\n\r\n  const onHandleSubmit = values => {\r\n    getUser({\r\n      ...values,\r\n      _id: uuidv4(),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"createInvoice\">\r\n      <section>\r\n        <h1 className=\"createInvoice-title\">Create invoice</h1>\r\n      </section>\r\n\r\n      <section>\r\n        <Formik\r\n          initialValues={{\r\n            number: '',\r\n            date_created: '',\r\n            date_supplied: '',\r\n            comment: '',\r\n          }}\r\n          validationSchema={validateSchema}\r\n          onSubmit={values => {\r\n            onHandleSubmit(values);\r\n            onHandleGoBack();\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n          }) => {\r\n            return (\r\n              <Form className='form'>\r\n                <label className=\"form-label\">\r\n                <span className=\"form-labelText\">Number:</span>\r\n                  <Field \r\n                    placeholder=\"at least 3 symbols\"\r\n                    className=\"form-input\"\r\n                    type=\"number\"\r\n                    name=\"number\"\r\n                    value={values.number}\r\n                  />\r\n                  <ErrorMessage\r\n                    className=\"error\"\r\n                    name=\"number\"\r\n                    component=\"div\"\r\n                  />\r\n                </label>\r\n\r\n                <label className=\"form-label\">\r\n                <span className=\"form-labelText\">Supply Date:</span>\r\n                  <Field\r\n                    className=\"form-input\"\r\n                    type=\"date\"\r\n                    name=\"date_supplied\"\r\n                    value={values.date_supplied}\r\n                  />\r\n                </label>\r\n\r\n                <label className=\"form-label\">\r\n                <span className=\"form-labelText\">Invoice Date:</span>\r\n                  <Field\r\n                    className=\"form-input\"\r\n                    type=\"date\"\r\n                    name=\"date_created\"\r\n                    value={values.date_created}\r\n                  />\r\n                </label>\r\n\r\n                <label className=\"form-label\">\r\n                <span className=\"form-labelText\">Comment:</span>\r\n                  <Field\r\n                    className=\"form-comment\"\r\n                    name=\"comment\"\r\n                    as=\"textarea\"\r\n                    placeholder=\"Comment...\"\r\n                    type=\"text\"\r\n                    value={values.comment}\r\n                  />\r\n                  <ErrorMessage\r\n                    className=\"error\"\r\n                    name=\"comment\"\r\n                    component=\"div\"\r\n                  />\r\n                </label>\r\n\r\n                <button className=\"form-btn\" type=\"submit\">\r\n                  Save\r\n                </button>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateInvoice;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport users from '../data/db.json';\r\nimport InvoiceTable from './invoiceTable/InvoiceTable';\r\nimport CreateInvoice from './createInvoice/CreateInvoice';\r\n\r\nconst initialState = {\r\n  info: [],\r\n};\r\n\r\nconst App = () => {\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const getUser = person => {\r\n    setState(prev => ({\r\n      ...prev,\r\n      info: [...prev.info, { ...person }],\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const info = localStorage.getItem('info');\r\n    if (info) {\r\n      setState({ info: JSON.parse(info) });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('info', JSON.stringify(state.info));\r\n  }, [state.info]);\r\n\r\n  return (\r\n    <>\r\n      <Route path=\"/\" \r\n      exact \r\n      render={() => <InvoiceTable \r\n      items={users} \r\n      infoLS={state.info} \r\n      />} />\r\n      <Route\r\n        path=\"/create\"\r\n        exact\r\n        render={() => <CreateInvoice getUser={getUser} />}\r\n      />\r\n      <Redirect to=\"/\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport '../node_modules/modern-normalize/modern-normalize.css';\nimport './index.scss';\nimport App from './components/App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}